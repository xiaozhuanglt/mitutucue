<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd" >

    <!-- ①：对com.springmvc包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.xiaozhuanglt.mitutucue.web"/>
    <context:component-scan base-package="com.xiaozhuanglt.mitutucue.service"/>
    <context:component-scan base-package="com.xiaozhuanglt.mitutucue.controller"/>
    <context:component-scan base-package="com.xiaozhuanglt.mitutucue.facade"/>

    <!--这个标签本质上设置Spring上下文允许为Controller转发请求
    这个标签会自动配置两个bean，分别是DefaultAnnotatationHandlerMapping和AnnotataionMethodHanderAdapter
    DefaultAnnotationHanderMapping
    Implementation of the {@link org.springframework.web.servlet.HandlerMapping}interface that maps handlers based on HTTP paths expressed through the {@link RequestMapping} annotation at the type or method level.
    这个Bean实现了HandlerMapping接口，通过@RequestMapping注解上的Http路径来映射请求处理器
    AnnotataionMethodHanderAdapter
    Implementation of the {@link org.springframework.web.servlet.HandlerAdapter} interface
    that maps handler methods based on HTTP paths, HTTP methods and request parameters expressed through the {@link RequestMapping} annotation.
    这个Bean实现了HandlerAdaper接口，通过@RequestMappingHttp上的Http路径，HttpMethod，请求参数来映射处理类的方法。
    -->

    <!--
    在spring3.1之前使用org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping注解映射器。
    在spring3.1之后使用org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping注解映射器。
    在spring3.1之前使用org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter注解适配器。
    在spring3.1之后使用org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter注解适配器。
    -->

    <!--<mvc:annotation-driven />-->

    <!-- 注解映射器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <!-- 注解适配器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
    <!-- 使用mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven就不用配置上边的
    RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven-->
    <!--  <mvc:annotation-driven></mvc:annotation-driven>-->

    <!-- 视图解析器
    解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
     -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    </bean>

    <!--如果webapp下你新建了文件夹，想访问里面的静态资源，那么就要在这配置一下-->
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/styles/" mapping="/styles/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>

    <mvc:default-servlet-handler/>

    <!-- 视图解析器 定义跳转的文件的前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="2"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
  <!--  <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        &lt;!&ndash; 默认编码 &ndash;&gt;
        <property name="defaultEncoding" value="utf-8" />
        &lt;!&ndash; 文件大小最大值 &ndash;&gt;
        <property name="maxUploadSize" value="10485760000" />
        &lt;!&ndash; 内存中的最大值 &ndash;&gt;
        <property name="maxInMemorySize" value="40960" />
    </bean>-->


    <bean class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration" id="swagger2Config"/>

    <!-- swagger -->
    <bean class="com.xiaozhuanglt.mitutucue.config.SwaggerConfig"/>
    <!--<context:annotation-config/>-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**"
                   location="classpath:/META-INF/resources/webjars/" />

</beans>